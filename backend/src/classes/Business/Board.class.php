<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2014-04-16 15:41:40                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

	class Board extends AutoBoard implements Prototyped, DAOConnected
	{
        const CLEANUP_DELAY_AFTER_DELETED = '24 hours';

        /**
		 * @return Board
		**/
		public static function create()
		{
			return new self;
		}
		
		/**
		 * @return BoardDAO
		**/
		public static function dao()
		{
			return Singleton::getInstance('BoardDAO');
		}
		
		/**
		 * @return ProtoBoard
		**/
		public static function proto()
		{
			return Singleton::getInstance('ProtoBoard');
		}

        /**
         * @param User $user
         * @return bool
         */
        public function hasModerator(User $user) {
            return $this->getModerator($user) != null;
        }

        /**
         * @param User $user
         * @return BoardModerator|null
         */
        public function getModerator(User $user) {
            /** @var BoardModerator[] $boardModerators */
            $boardModerators = $this->getModerators()->getList();
            foreach ($boardModerators as $moderator) {
                if ($moderator->getUserId() == $user->getId()) {
                    return $moderator;
                }
            }
            return null;
        }

        public function getDescriptionHtml()
        {
            return Markdown::format($this->getDescription());
        }

        public function export()
        {
            return [
                'dir' => $this->getDir(),
                'name' => $this->getName(),
                'isNsfw' => $this->isNsfw(),
                'isBlockRu' => $this->isBlockRu(),
                'identity' => $this->isIdentity(),
                'sage' => $this->isSage(),
                'likes' => $this->isLikes(),
                'textboard' => $this->getTextboard()
            ];
        }

        public function exportExtended(UserSession $session)
        {
            $export = array_merge(
                $this->export(),
                [
                    'description' => $this->getDescription(),
                    'descriptionHtml' => $this->getDescriptionHtml(),
                ]
            );

            $export['canCreateThread'] = $session->getActiveBanInBoard($this) == null;

            if ($session->getUser()) {
                $export['isFavourite'] = $session->getUser()->isFavouriteBoard($this);
                $export['canBeManaged'] = $session->getUser()->canManageBoard($this);
                $export['canBeModerated'] = $session->getUser()->canModerateBoard($this);
            }

            return $export;
        }
	}
?>