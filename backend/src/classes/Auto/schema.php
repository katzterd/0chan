<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2025-06-05 10:52:30                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	$schema = new DBSchema();
	
	$schema->
		addTable(
			DBTable::create('user')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(255),
					'login'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'password'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'role_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'show_nsfw'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'tree_view'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'view_deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(100000),
					'custom_css'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('watched_thread')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'thread_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('invite')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(128),
					'invite'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'used'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'used_by_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('rate')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'post_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'liked'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('ban')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(64),
					'ip_hash'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'banned_by_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'banned_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'banned_till'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'unbanned_by_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP),
					'unbanned_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'post_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT)->
					setNull(false),
					'reason'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'appeal'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('user_identity')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'address'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('favourite_board')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('board_moderator')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'initiator_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('board')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(16),
					'dir'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(255),
					'name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TEXT),
					'description'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'hidden'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'imrequired'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'textboard'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'sage'
				)->
				setDefault(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'likes'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'identity'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'nsfw'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'block_ru'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'owner_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP),
					'deleted_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'popularity'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER)->
					setNull(false),
					'bump_limit'
				)->
				setDefault(500)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER)->
					setNull(false),
					'thread_limit'
				)->
				setDefault(100)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('thread')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'update_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP),
					'purged_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP),
					'deleted_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'sticky'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'locked'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'bump_limit_reached'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'popularity'
				)->
				setDefault(0)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('post')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'thread_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'parent_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(64),
					'ip_hash'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'local_gw'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(9001),
					'message'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'approved'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'banned'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'sage'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'identity_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('post_reference')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'referenced_by_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'references_to_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('attachment')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'create_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'post_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'publish_token'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'published'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'deleted'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP),
					'deleted_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN),
					'nsfw'
				)->
				setDefault(false)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'embed_id'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('attachment_image')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'role_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'attachment_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(64),
					'server'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'filename'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER)->
					setNull(false),
					'file_size'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(32),
					'md5'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER)->
					setNull(false),
					'width'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER)->
					setNull(false),
					'height'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('storage_trash')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'server'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(64),
					'filename'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('attachment_embed')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'service_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(255),
					'embed_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(255),
					'title'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('post_report')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'post_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(1000),
					'reason'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'reported_by_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(64),
					'reported_by_ip_hash'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('dialog')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'as_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'with_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'created_at'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'updated_at'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('dialog_message')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'from_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'to_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setNull(false)->
					setSize(2000),
					'text'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BOOLEAN)->
					setNull(false),
					'read'
				)->
				setDefault(false)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('board_stats_hourly')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'threads_active'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'threads_new'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'posts'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'unique_posters'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'hour'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('board_stats_daily')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'threads_active'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'threads_new'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'posts'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'unique_posters'
				)->
				setDefault(0)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::DATE)->
					setNull(false),
					'date'
				)
			)
		);
	
	$schema->
		addTable(
			DBTable::create('moderator_log')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'id'
				)->
				setPrimaryKey(true)->
				setAutoincrement(true)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'board_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::TIMESTAMP)->
					setNull(false),
					'event_date'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'event_user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'event_type_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(1000),
					'message'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'ban_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'thread_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(255),
					'thread_title'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'post_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::INTEGER),
					'attachment_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT),
					'user_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(255),
					'property_name'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(255),
					'old_value'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::VARCHAR)->
					setSize(255),
					'new_value'
				)
			)
		);
	
	// watched_thread.user_id -> user.id
	$schema->
		getTableByName('watched_thread')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// watched_thread.thread_id -> thread.id
	$schema->
		getTableByName('watched_thread')->
		getColumnByName('thread_id')->
		setReference(
			$schema->
				getTableByName('thread')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// invite.user_id -> user.id
	$schema->
		getTableByName('invite')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// invite.used_by_id -> user.id
	$schema->
		getTableByName('invite')->
		getColumnByName('used_by_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// rate.post_id -> post.id
	$schema->
		getTableByName('rate')->
		getColumnByName('post_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// rate.user_id -> user.id
	$schema->
		getTableByName('rate')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// ban.user_id -> user.id
	$schema->
		getTableByName('ban')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// ban.board_id -> board.id
	$schema->
		getTableByName('ban')->
		getColumnByName('board_id')->
		setReference(
			$schema->
				getTableByName('board')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// ban.banned_by_id -> user.id
	$schema->
		getTableByName('ban')->
		getColumnByName('banned_by_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// ban.unbanned_by_id -> user.id
	$schema->
		getTableByName('ban')->
		getColumnByName('unbanned_by_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// ban.post_id -> post.id
	$schema->
		getTableByName('ban')->
		getColumnByName('post_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// user_identity.user_id -> user.id
	$schema->
		getTableByName('user_identity')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// favourite_board.user_id -> user.id
	$schema->
		getTableByName('favourite_board')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// favourite_board.board_id -> board.id
	$schema->
		getTableByName('favourite_board')->
		getColumnByName('board_id')->
		setReference(
			$schema->
				getTableByName('board')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// board_moderator.user_id -> user.id
	$schema->
		getTableByName('board_moderator')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// board_moderator.board_id -> board.id
	$schema->
		getTableByName('board_moderator')->
		getColumnByName('board_id')->
		setReference(
			$schema->
				getTableByName('board')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// board_moderator.initiator_id -> user.id
	$schema->
		getTableByName('board_moderator')->
		getColumnByName('initiator_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// board.owner_id -> user.id
	$schema->
		getTableByName('board')->
		getColumnByName('owner_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// thread.board_id -> board.id
	$schema->
		getTableByName('thread')->
		getColumnByName('board_id')->
		setReference(
			$schema->
				getTableByName('board')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post.thread_id -> thread.id
	$schema->
		getTableByName('post')->
		getColumnByName('thread_id')->
		setReference(
			$schema->
				getTableByName('thread')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post.parent_id -> post.id
	$schema->
		getTableByName('post')->
		getColumnByName('parent_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post.user_id -> user.id
	$schema->
		getTableByName('post')->
		getColumnByName('user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post.identity_id -> user_identity.id
	$schema->
		getTableByName('post')->
		getColumnByName('identity_id')->
		setReference(
			$schema->
				getTableByName('user_identity')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post_reference.referenced_by_id -> post.id
	$schema->
		getTableByName('post_reference')->
		getColumnByName('referenced_by_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post_reference.references_to_id -> post.id
	$schema->
		getTableByName('post_reference')->
		getColumnByName('references_to_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// attachment.post_id -> post.id
	$schema->
		getTableByName('attachment')->
		getColumnByName('post_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// attachment.embed_id -> attachment_embed.id
	$schema->
		getTableByName('attachment')->
		getColumnByName('embed_id')->
		setReference(
			$schema->
				getTableByName('attachment_embed')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// attachment_image.attachment_id -> attachment.id
	$schema->
		getTableByName('attachment_image')->
		getColumnByName('attachment_id')->
		setReference(
			$schema->
				getTableByName('attachment')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post_report.post_id -> post.id
	$schema->
		getTableByName('post_report')->
		getColumnByName('post_id')->
		setReference(
			$schema->
				getTableByName('post')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// post_report.reported_by_id -> user.id
	$schema->
		getTableByName('post_report')->
		getColumnByName('reported_by_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// dialog.as_id -> user_identity.id
	$schema->
		getTableByName('dialog')->
		getColumnByName('as_id')->
		setReference(
			$schema->
				getTableByName('user_identity')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// dialog.with_id -> user_identity.id
	$schema->
		getTableByName('dialog')->
		getColumnByName('with_id')->
		setReference(
			$schema->
				getTableByName('user_identity')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	$schema->
		addTable(
			DBTable::create('dialog_dialog_message')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'dialog_message_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'dialog_id'
				)
			)->
			addUniques('dialog_message_id', 'dialog_id')
		);
	
	// dialog_message.from_id -> user_identity.id
	$schema->
		getTableByName('dialog_message')->
		getColumnByName('from_id')->
		setReference(
			$schema->
				getTableByName('user_identity')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// dialog_message.to_id -> user_identity.id
	$schema->
		getTableByName('dialog_message')->
		getColumnByName('to_id')->
		setReference(
			$schema->
				getTableByName('user_identity')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	$schema->
		addTable(
			DBTable::create('dialog_message_dialog')->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'dialog_id'
				)
			)->
			addColumn(
				DBColumn::create(
					DataType::create(DataType::BIGINT)->
					setNull(false),
					'dialog_message_id'
				)
			)->
			addUniques('dialog_id', 'dialog_message_id')
		);
	
	// moderator_log.board_id -> board.id
	$schema->
		getTableByName('moderator_log')->
		getColumnByName('board_id')->
		setReference(
			$schema->
				getTableByName('board')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
	// moderator_log.event_user_id -> user.id
	$schema->
		getTableByName('moderator_log')->
		getColumnByName('event_user_id')->
		setReference(
			$schema->
				getTableByName('user')->
				getColumnByName('id'),
				ForeignChangeAction::restrict(),
				ForeignChangeAction::cascade()
			);
	
?>