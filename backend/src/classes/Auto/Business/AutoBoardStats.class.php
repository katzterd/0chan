<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2017-05-03 16:07:07                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoBoardStats extends IdentifiableObject
	{
		protected $board = null;
		protected $boardId = null;
		protected $threadsActive = 0;
		protected $threadsNew = 0;
		protected $posts = 0;
		protected $uniquePosters = 0;
		
		/**
		 * @return Board
		**/
		public function getBoard()
		{
			if (!$this->board && $this->boardId) {
				$this->board = Board::dao()->getById($this->boardId);
			}
			
			return $this->board;
		}
		
		public function getBoardId()
		{
			return $this->board
				? $this->board->getId()
				: $this->boardId;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setBoard(Board $board)
		{
			$this->board = $board;
			$this->boardId = $board ? $board->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setBoardId($id)
		{
			$this->board = null;
			$this->boardId = $id;
			
			return $this;
		}
		
		/**
		 * @return BoardStats
		**/
		public function dropBoard()
		{
			$this->board = null;
			$this->boardId = null;
			
			return $this;
		}
		
		public function getThreadsActive()
		{
			return $this->threadsActive;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setThreadsActive($threadsActive)
		{
			$this->threadsActive = $threadsActive;
			
			return $this;
		}
		
		public function getThreadsNew()
		{
			return $this->threadsNew;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setThreadsNew($threadsNew)
		{
			$this->threadsNew = $threadsNew;
			
			return $this;
		}
		
		public function getPosts()
		{
			return $this->posts;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setPosts($posts)
		{
			$this->posts = $posts;
			
			return $this;
		}
		
		public function getUniquePosters()
		{
			return $this->uniquePosters;
		}
		
		/**
		 * @return BoardStats
		**/
		public function setUniquePosters($uniquePosters)
		{
			$this->uniquePosters = $uniquePosters;
			
			return $this;
		}
	}
?>