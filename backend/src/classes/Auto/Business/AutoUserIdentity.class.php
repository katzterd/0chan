<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2017-03-08 18:00:49                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoUserIdentity extends IdentifiableObject
	{
		protected $user = null;
		protected $userId = null;
		protected $address = null;
		protected $name = null;
		protected $deleted = false;
		protected $dialogs = null;
		
		/**
		 * @return User
		**/
		public function getUser()
		{
			if (!$this->user && $this->userId) {
				$this->user = User::dao()->getById($this->userId);
			}
			
			return $this->user;
		}
		
		public function getUserId()
		{
			return $this->user
				? $this->user->getId()
				: $this->userId;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function setUser(User $user = null)
		{
			$this->user = $user;
			$this->userId = $user ? $user->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function setUserId($id = null)
		{
			$this->user = null;
			$this->userId = $id;
			
			return $this;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function dropUser()
		{
			$this->user = null;
			$this->userId = null;
			
			return $this;
		}
		
		public function getAddress()
		{
			return $this->address;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function setAddress($address)
		{
			$this->address = $address;
			
			return $this;
		}
		
		public function getName()
		{
			return $this->name;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function setName($name)
		{
			$this->name = $name;
			
			return $this;
		}
		
		public function getDeleted()
		{
			return $this->deleted;
		}
		
		public function isDeleted()
		{
			return $this->deleted;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function setDeleted($deleted = false)
		{
			$this->deleted = ($deleted === true);
			
			return $this;
		}
		
		/**
		 * @return UserIdentityDialogsDAO
		**/
		public function getDialogs($lazy = false)
		{
			if (!$this->dialogs || ($this->dialogs->isLazy() != $lazy)) {
				$this->dialogs = new UserIdentityDialogsDAO($this, $lazy);
			}
			
			return $this->dialogs;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function fillDialogs($collection, $lazy = false)
		{
			$this->dialogs = new UserIdentityDialogsDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->dialogs->mergeList($collection);
			
			return $this;
		}
	}
?>