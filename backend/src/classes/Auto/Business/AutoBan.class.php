<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2017-02-18 21:33:23                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoBan extends IdentifiableObject
	{
		protected $user = null;
		protected $userId = null;
		protected $ipHash = null;
		protected $board = null;
		protected $boardId = null;
		protected $bannedBy = null;
		protected $bannedById = null;
		protected $bannedAt = null;
		protected $bannedTill = null;
		protected $unbannedBy = null;
		protected $unbannedById = null;
		protected $unbannedAt = null;
		protected $post = null;
		protected $postId = null;
		protected $reason = null;
		protected $appeal = null;
		
		/**
		 * @return User
		**/
		public function getUser()
		{
			if (!$this->user && $this->userId) {
				$this->user = User::dao()->getById($this->userId);
			}
			
			return $this->user;
		}
		
		public function getUserId()
		{
			return $this->user
				? $this->user->getId()
				: $this->userId;
		}
		
		/**
		 * @return Ban
		**/
		public function setUser(User $user = null)
		{
			$this->user = $user;
			$this->userId = $user ? $user->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function setUserId($id = null)
		{
			$this->user = null;
			$this->userId = $id;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropUser()
		{
			$this->user = null;
			$this->userId = null;
			
			return $this;
		}
		
		public function getIpHash()
		{
			return $this->ipHash;
		}
		
		/**
		 * @return Ban
		**/
		public function setIpHash($ipHash)
		{
			$this->ipHash = $ipHash;
			
			return $this;
		}
		
		/**
		 * @return Board
		**/
		public function getBoard()
		{
			if (!$this->board && $this->boardId) {
				$this->board = Board::dao()->getById($this->boardId);
			}
			
			return $this->board;
		}
		
		public function getBoardId()
		{
			return $this->board
				? $this->board->getId()
				: $this->boardId;
		}
		
		/**
		 * @return Ban
		**/
		public function setBoard(Board $board)
		{
			$this->board = $board;
			$this->boardId = $board ? $board->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function setBoardId($id)
		{
			$this->board = null;
			$this->boardId = $id;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropBoard()
		{
			$this->board = null;
			$this->boardId = null;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getBannedBy()
		{
			if (!$this->bannedBy && $this->bannedById) {
				$this->bannedBy = User::dao()->getById($this->bannedById);
			}
			
			return $this->bannedBy;
		}
		
		public function getBannedById()
		{
			return $this->bannedBy
				? $this->bannedBy->getId()
				: $this->bannedById;
		}
		
		/**
		 * @return Ban
		**/
		public function setBannedBy(User $bannedBy)
		{
			$this->bannedBy = $bannedBy;
			$this->bannedById = $bannedBy ? $bannedBy->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function setBannedById($id)
		{
			$this->bannedBy = null;
			$this->bannedById = $id;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropBannedBy()
		{
			$this->bannedBy = null;
			$this->bannedById = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getBannedAt()
		{
			return $this->bannedAt;
		}
		
		/**
		 * @return Ban
		**/
		public function setBannedAt(Timestamp $bannedAt)
		{
			$this->bannedAt = $bannedAt;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropBannedAt()
		{
			$this->bannedAt = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getBannedTill()
		{
			return $this->bannedTill;
		}
		
		/**
		 * @return Ban
		**/
		public function setBannedTill(Timestamp $bannedTill)
		{
			$this->bannedTill = $bannedTill;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropBannedTill()
		{
			$this->bannedTill = null;
			
			return $this;
		}
		
		/**
		 * @return User
		**/
		public function getUnbannedBy()
		{
			if (!$this->unbannedBy && $this->unbannedById) {
				$this->unbannedBy = User::dao()->getById($this->unbannedById);
			}
			
			return $this->unbannedBy;
		}
		
		public function getUnbannedById()
		{
			return $this->unbannedBy
				? $this->unbannedBy->getId()
				: $this->unbannedById;
		}
		
		/**
		 * @return Ban
		**/
		public function setUnbannedBy(User $unbannedBy = null)
		{
			$this->unbannedBy = $unbannedBy;
			$this->unbannedById = $unbannedBy ? $unbannedBy->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function setUnbannedById($id = null)
		{
			$this->unbannedBy = null;
			$this->unbannedById = $id;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropUnbannedBy()
		{
			$this->unbannedBy = null;
			$this->unbannedById = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getUnbannedAt()
		{
			return $this->unbannedAt;
		}
		
		/**
		 * @return Ban
		**/
		public function setUnbannedAt(Timestamp $unbannedAt = null)
		{
			$this->unbannedAt = $unbannedAt;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropUnbannedAt()
		{
			$this->unbannedAt = null;
			
			return $this;
		}
		
		/**
		 * @return Post
		**/
		public function getPost()
		{
			if (!$this->post && $this->postId) {
				$this->post = Post::dao()->getById($this->postId);
			}
			
			return $this->post;
		}
		
		public function getPostId()
		{
			return $this->post
				? $this->post->getId()
				: $this->postId;
		}
		
		/**
		 * @return Ban
		**/
		public function setPost(Post $post = null)
		{
			$this->post = $post;
			$this->postId = $post ? $post->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function setPostId($id = null)
		{
			$this->post = null;
			$this->postId = $id;
			
			return $this;
		}
		
		/**
		 * @return Ban
		**/
		public function dropPost()
		{
			$this->post = null;
			$this->postId = null;
			
			return $this;
		}
		
		public function getReason()
		{
			return $this->reason;
		}
		
		/**
		 * @return Ban
		**/
		public function setReason($reason)
		{
			$this->reason = $reason;
			
			return $this;
		}
		
		public function getAppeal()
		{
			return $this->appeal;
		}
		
		/**
		 * @return Ban
		**/
		public function setAppeal($appeal)
		{
			$this->appeal = $appeal;
			
			return $this;
		}
	}
?>