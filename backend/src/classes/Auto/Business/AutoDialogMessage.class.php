<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2017-03-07 20:54:11                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoDialogMessage extends IdentifiableObject
	{
		protected $from = null;
		protected $fromId = null;
		protected $to = null;
		protected $toId = null;
		protected $date = null;
		protected $text = null;
		protected $read = false;
		protected $dialogs = null;
		
		/**
		 * @return UserIdentity
		**/
		public function getFrom()
		{
			if (!$this->from && $this->fromId) {
				$this->from = UserIdentity::dao()->getById($this->fromId);
			}
			
			return $this->from;
		}
		
		public function getFromId()
		{
			return $this->from
				? $this->from->getId()
				: $this->fromId;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setFrom(UserIdentity $from)
		{
			$this->from = $from;
			$this->fromId = $from ? $from->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setFromId($id)
		{
			$this->from = null;
			$this->fromId = $id;
			
			return $this;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function dropFrom()
		{
			$this->from = null;
			$this->fromId = null;
			
			return $this;
		}
		
		/**
		 * @return UserIdentity
		**/
		public function getTo()
		{
			if (!$this->to && $this->toId) {
				$this->to = UserIdentity::dao()->getById($this->toId);
			}
			
			return $this->to;
		}
		
		public function getToId()
		{
			return $this->to
				? $this->to->getId()
				: $this->toId;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setTo(UserIdentity $to)
		{
			$this->to = $to;
			$this->toId = $to ? $to->getId() : null;
			
			return $this;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setToId($id)
		{
			$this->to = null;
			$this->toId = $id;
			
			return $this;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function dropTo()
		{
			$this->to = null;
			$this->toId = null;
			
			return $this;
		}
		
		/**
		 * @return Timestamp
		**/
		public function getDate()
		{
			return $this->date;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setDate(Timestamp $date)
		{
			$this->date = $date;
			
			return $this;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function dropDate()
		{
			$this->date = null;
			
			return $this;
		}
		
		public function getText()
		{
			return $this->text;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setText($text)
		{
			$this->text = $text;
			
			return $this;
		}
		
		public function getRead()
		{
			return $this->read;
		}
		
		public function isRead()
		{
			return $this->read;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function setRead($read = false)
		{
			$this->read = ($read === true);
			
			return $this;
		}
		
		/**
		 * @return DialogMessageDialogsDAO
		**/
		public function getDialogs($lazy = false)
		{
			if (!$this->dialogs || ($this->dialogs->isLazy() != $lazy)) {
				$this->dialogs = new DialogMessageDialogsDAO($this, $lazy);
			}
			
			return $this->dialogs;
		}
		
		/**
		 * @return DialogMessage
		**/
		public function fillDialogs($collection, $lazy = false)
		{
			$this->dialogs = new DialogMessageDialogsDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->dialogs->mergeList($collection);
			
			return $this;
		}
	}
?>