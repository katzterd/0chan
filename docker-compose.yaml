services:

  frontend:
    build: ./frontend
    image: ${REGISTRY_PATH}/frontend:latest
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - storage
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.nc.role == front
      update_config:
        parallelism: 1

  backend:
    build: ./backend
    image: ${REGISTRY_PATH}/backend:latest
    container_name: backend
    depends_on:
      - db
      - cache
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      placement:
        constraints:
          - node.labels.nc.role == main
      update_config:
        parallelism: 1
        delay: 2s
        monitor: 2s

  storage:
    build: ./storage
    image: ${REGISTRY_PATH}/storage:latest
    container_name: storage
    ports:
      - target: 81
        published: 359
        protocol: tcp
        mode: host
    environment:
      - "DISCOVER=storage"
    volumes:
      - storage:/storage
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      mode: global
      placement:
        constraints:
          - node.labels.nc.role == storage
      update_config:
        parallelism: 1
        delay: 5s
        monitor: 5s
      restart_policy:
        condition: on-failure

  torgate:
    build: ./torgate
    image: ${REGISTRY_PATH}/torgate:latest
    container_name: torgate
    depends_on:
      frontend:
        condition: service_started
        restart: false
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.nc.role == front
      update_config:
        parallelism: 1
        delay: 2s
        monitor: 2s
        
  i2pgate:
    build: ./i2pgate
    image: ${REGISTRY_PATH}/i2pgate:latest
    container_name: i2pgate
    depends_on:
      frontend:
        condition: service_started
        restart: false
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.nc.role == front
      update_config:
        parallelism: 1
        delay: 2s
        monitor: 2s
        
  yggdrasil:
    build: ./yggdrasil
    image: ${REGISTRY_PATH}/yggdrasil:latest
    container_name: yggdrasil
    depends_on:
      frontend:
        condition: service_started
        restart: false
    env_file:
      - .env
    networks:
      - bridge
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    sysctls:
      - "net.ipv6.conf.all.disable_ipv6=0"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.nc.role == front
      update_config:
        parallelism: 1
        delay: 2s
        monitor: 2s

  db:
    image: postgres:17-alpine
    container_name: db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - bridge
    deploy:
      placement:
        constraints:
          - node.labels.nc.role == main

  cache:
    image: redis:7-alpine
    container_name: cache
    networks:
      - bridge
    deploy:
      placement:
          constraints:
            - node.labels.nc.role == main
    
networks:
  bridge:

volumes:
  db_data:
  storage:
