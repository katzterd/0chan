name: CI

on:
  push:
    tags:
      - "v*"

env:
  FRONTEND_IMAGE_NAME: frontend
  BACKEND_IMAGE_NAME: backend
  STORAGE_IMAGE_NAME: storage
  TORGATE_IMAGE_NAME: torgate
  I2PGATE_IMAGE_NAME: i2pgate
  YGGDRASILGATE_IMAGE_NAME: yggdrasil

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:

# Prepare
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

# Build
      -
        name: Build frontend [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$FRONTEND_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE frontend/. --push -f frontend/Dockerfile
      -
        name: Build backend [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$BACKEND_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE backend/. --push -f backend/Dockerfile
      -
        name: Build storage [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$STORAGE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE storage/. --push -f storage/Dockerfile
      -
        name: Build torgate [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$TORGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE torgate/. --push -f torgate/Dockerfile
      -
        name: Build i2pgate [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$I2PGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE i2pgate/. --push -f i2pgate/Dockerfile
      -
        name: Build yggdrasilgate [Public]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}/$YGGDRASILGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE yggdrasil/. --push -f yggdrasil/Dockerfile

# Patch
      -
        name: Apply patch [Private]
        run: |
          echo "${{ secrets.B64_PATCH_A }}" > B64_PATCH_A
          echo "${{ secrets.B64_PATCH_B }}" > B64_PATCH_B
          echo "${{ secrets.B64_PATCH_C }}" > B64_PATCH_C
          cat B64_PATCH_A B64_PATCH_B B64_PATCH_C | base64 -d | git apply

# Build private images
      -
        name: Build frontend [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$FRONTEND_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE frontend/. --push -f frontend/Dockerfile
      -
        name: Build backend [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$BACKEND_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE backend/. --push -f backend/Dockerfile
      -
        name: Build storage [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$STORAGE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE storage/. --push -f storage/Dockerfile
      -
        name: Build torgate [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$TORGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE torgate/. --push -f torgate/Dockerfile
      -
        name: Build i2pgate [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$I2PGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE i2pgate/. --push -f i2pgate/Dockerfile
      -
        name: Build yggdrasilgate [Private]
        run: |
          IMAGE=ghcr.io/${{ github.repository }}-prod/$YGGDRASILGATE_IMAGE_NAME:latest
          docker buildx build --platform linux/amd64,linux/arm64 -t $IMAGE yggdrasil/. --push -f yggdrasil/Dockerfile
