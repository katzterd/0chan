name: Docker build (Prod)

on:
  push:
    branches:
      - main

env:
  FRONTEND_IMAGE_NAME: frontend
  BACKEND_IMAGE_NAME: backend
  STORAGE_IMAGE_NAME: storage
  TORGATE_IMAGE_NAME: torgate
  I2PGATE_IMAGE_NAME: i2pgate
  YGGDRASILGATE_IMAGE_NAME: yggdrasil

jobs:

  buildDockerProd:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Filter
        uses: tj-actions/changed-files@v46.0.5
        id: filter
        with:
          files_yaml: |
            frontend:
              - 'frontend/**'
              - '!frontend/.gitignore'
            backend:
              - 'backend/**'
              - '!backend/.gitignore'
            storage:
              - 'storage/**'
            torgate:
              - 'torgate/**'
            i2pgate:
              - 'i2pgate/**'
            yggdrasilgate:
              - 'yggdrasil/**'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      -
        name: Apply patch [Private]
        env: 
          B64_PATCH_A: "${{ secrets.B64_PATCH_A }}"
          B64_PATCH_B: "${{ secrets.B64_PATCH_B }}"
          B64_PATCH_C: "${{ secrets.B64_PATCH_C }}"
        run: |
          echo "$B64_PATCH_A""$B64_PATCH_B""$B64_PATCH_C" | base64 -d | git apply

      -
        name: Build frontend [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.frontend_any_changed == 'true'
        with:
          context: frontend/.
          file: frontend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.FRONTEND_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Build backend [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.backend_any_changed == 'true'
        with:
          context: backend/.
          file: backend/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.BACKEND_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Build storage [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.storage_any_changed == 'true'
        with:
          context: storage/.
          file: storage/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.STORAGE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Build torgate [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.torgate_any_changed == 'true'
        with:
          context: torgate/.
          file: torgate/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.TORGATE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Build i2pgate [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.i2pgate_any_changed == 'true'
        with:
          context: i2pgate/.
          file: i2pgate/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.I2PGATE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      -
        name: Build yggdrasilgate [Private]
        uses: docker/build-push-action@v5
        if: steps.filter.outputs.yggdrasilgate_any_changed == 'true'
        with:
          context: yggdrasil/.
          file: yggdrasil/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}-prod/${{ env.YGGDRASILGATE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
