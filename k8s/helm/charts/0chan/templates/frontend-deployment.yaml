apiVersion: apps/v1
items:

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: {{ .Values.svc.frontend.name }}
    namespace: {{ .Release.Namespace }}
  spec:
    replicas: {{ .Values.svc.frontend.image.replicas }}
    selector:
      matchLabels:
        app: {{ .Values.svc.frontend.name }}
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 1
    template:
      metadata:
        labels:
          app: {{ .Values.svc.frontend.name }}
          part-of: lb
      spec:
        hostname: {{ .Values.svc.frontend.name }}
        restartPolicy: {{ .Values.restartPolicy }}
        {{- include "ImagePullSecret" . | nindent 8 }}
        initContainers:
        - name: wait-backend-and-storage
          image: alpine/curl
          command:
          - sh
          - -c
          - |
            until curl -o /dev/null http://{{ .Values.svc.backend.name }}:9000 2>&1 | grep -q "Recv failure: Connection reset by peer" && \
              curl -s -o /dev/null http://{{ .Values.svc.storage.name }}:81; do
              sleep 1
            done
        containers:
        - name: {{ .Values.svc.frontend.image.name }}
          image: {{ include "ImageRegistry" . }}/{{ .Values.svc.frontend.image.name }}:{{ .Values.svc.frontend.image.tag }}
          imagePullPolicy: {{ .Values.svc.frontend.image.pullPolicy }}
          ports:
          - containerPort: 80
            protocol: TCP

- apiVersion: v1
  kind: Service
  metadata:
    name: {{ .Values.svc.frontend.name }}
    namespace: {{ .Release.Namespace }}
  spec:
    selector:
      app: {{ .Values.svc.frontend.name }}
    clusterIP: None

kind: List
metadata:
  name: "frontend-list"
