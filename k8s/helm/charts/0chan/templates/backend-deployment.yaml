---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      name: backend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        name: backend
        {{- with .Values.backend.podLabels }}
        {{ toYaml . }}
        {{- end }}
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{ toYaml . }}
      {{- end }}
    spec:
      hostname: backend
      restartPolicy: Always
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets }}
      {{- end }}
      initContainers:
      - name: wait-db
        image: postgres
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -ec
        - |
          until pg_isready -h db -p 5432 -U postgres; do
            sleep 1
          done
      containers:
      - name: backend
        image: {{ .Values.Registry }}/backend:{{ .Values.backend.image.tag }}
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - containerPort: 9000
        {{- $secretName := .Values.secret | default "0chan-secret" }}
        {{- with .Values.backend.env }}
        env:
          {{- range . }}
          - name: {{ .name }}
            {{- if .value }}
            value: {{ .value | quote }}
            {{- else if .valueFrom }}
            valueFrom:
              {{- $valueFrom := .valueFrom }}
              {{- if kindIs "string" $valueFrom.secretKeyRef.name }}
              secretKeyRef:
                key: {{ $valueFrom.secretKeyRef.key }}
                name: {{ $secretName | quote }}
              {{- else }}
                {{- toYaml $valueFrom }}
              {{- end }}
            {{- end }}
            {{- end }}
        {{- end }}
...
---          
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    name: backend
  clusterIP: None
...